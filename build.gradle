buildscript {
  ext {
    kotlinVersion="1.1.50"
  }
}

plugins {
  id 'java'
  id 'checkstyle'
  id 'org.jenkins-ci.jpi' version '0.22.0'
  id 'net.saliman.cobertura' version '2.4.0'
  id 'com.github.kt3k.coveralls' version '2.8.1'
  id "org.jetbrains.kotlin.jvm" version "1.1.50"
}

group = 'org.jenkins-ci.plugins'
archivesBaseName = 'phabricator-plugin'
version = '1.9.8-SNAPSHOT'
description = 'Integrate Jenkins with Phabricator Differentials and Uberalls'

sourceCompatibility = 1.6
targetCompatibility = 1.6
compileKotlin {
  kotlinOptions.jvmTarget = "1.6"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.6"
}
sourceSets {
  main.kotlin.srcDirs += 'src/main/kotlin'
  main.java.srcDirs += 'src/main/java'
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

jenkinsPlugin {
  coreVersion = '1.609.2'
  displayName = 'Phabricator Differential Plugin'
  url = 'https://wiki.jenkins-ci.org/display/JENKINS/Phabricator+Differential+Plugin'
  gitHubUrl = 'https://github.com/uber/phabricator-jenkins-plugin'
  shortName = 'phabricator-plugin'
  maskClasses = 'org.apache.http.'

  developers {
    developer {
      id 'ai'
      name 'Aiden Scandella'
      email 'sc@ndella.com'
    }
    developer {
      id 'nthienan'
      name 'An Nguyen'
      email 'nthienan.it@gmail.com'
    }
  }

  licenses {
    license {
      name 'MIT License'
      url 'http://opensource.org/licenses/MIT'
    }
  }
}

dependencies {
  compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
  compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
  compile 'org.apache.httpcomponents:httpclient:4.5.3'
  compile 'org.json:json:20170516'
  jenkinsPlugins 'org.jenkins-ci.plugins:credentials:1.22@jar'

  optionalJenkinsPlugins 'org.jenkins-ci.plugins:junit:1.6@jar'
  optionalJenkinsPlugins 'org.jenkins-ci.plugins:cobertura:1.9.6@jar'

  testCompile 'junit:junit:4.12'
  testCompile 'org.apache.httpcomponents:httpclient:4.3:tests'
  testCompile 'net.sf.trove4j:trove4j:3.0.3'
  testCompile('org.mockito:mockito-core:1.10.19') {
    exclude module: 'hamcrest-core'
  }

  jenkinsTest 'org.jenkins-ci.main:jenkins-war:1.609.2@war'
  jenkinsTest 'org.jenkins-ci.plugins:matrix-project:1.4@jar'
  jenkinsTest 'org.jenkins-ci.main:jenkins-test-harness:1.609.2@jar'
}

configurations.all {
  if (it.name.toLowerCase().contains("test")) {
    resolutionStrategy {
      force 'org.apache.httpcomponents:httpclient:4.3:tests'
    }
  }
}

cobertura.coverageFormats = ['html', 'xml']
